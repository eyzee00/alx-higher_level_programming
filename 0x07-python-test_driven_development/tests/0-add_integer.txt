test file for the module '0-add_integer'
--------------------------------------------

case 0:
    succesfull import

>>> add_integer = __import__('0-add_integer').add_integer
>>>

---------------------------------------------

case 1:
    add two valid integers

>>> print(add_integer(2, 2))
4
>>>

---------------------------------------------

case 2:
    add two valid negative integers

>>> print(add_integer(-5, -2))
-7
>>>

---------------------------------------------

case 3:
    add with only the first argument

>>> print(add_integer(3))
101
>>>

---------------------------------------------

case 4:
    add two valid float numbers

>>> print(add_integer(100.9, -2.5))
98
>>>

---------------------------------------------

case 5:
    add using one argument with a wrong type

>>> print(add_integer(4, "Hello"))
Traceback (most recent call last):
TypeError: b must be an integer
>>>

---------------------------------------------

case 6:
    add using two arguments with a wrong type

>>> print(add_integer("hi", "Hello"))
Traceback (most recent call last):
TypeError: a must be an integer
>>>

---------------------------------------------

case 7:
    add with None as argument

>>> print(add_integer(None))
Traceback (most recent call last):
TypeError: a must be an integer
>>>

---------------------------------------------

case 8:
    add without arguments

>>> print(add_integer())
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
>>>

---------------------------------------------

case 9:
    add and check the return type

>>> type(add_integer(1.7, -2))
<class 'int'>
>>>

---------------------------------------------

case 10:
	check for overflow

>>> type(add_integer(10e500**2, 1))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
>>>

---------------------------------------------

case 11:
    float nan

>>> a = float('nan')
>>> type(add_integer(a, -2))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
>>>